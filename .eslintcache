[{"/home/rudra/Code/PracticeCode/redux-todoapp/src/index.js":"1","/home/rudra/Code/PracticeCode/redux-todoapp/src/reportWebVitals.js":"2","/home/rudra/Code/PracticeCode/redux-todoapp/src/App.js":"3","/home/rudra/Code/PracticeCode/redux-todoapp/src/redux/store.js":"4","/home/rudra/Code/PracticeCode/redux-todoapp/src/redux/reducers/TodosReducer.js":"5","/home/rudra/Code/PracticeCode/redux-todoapp/src/components/Header/Header.js":"6","/home/rudra/Code/PracticeCode/redux-todoapp/src/components/Todo/Todo.js":"7","/home/rudra/Code/PracticeCode/redux-todoapp/src/components/Adder/Adder.js":"8"},{"size":623,"mtime":1608455181357,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1608225084244,"results":"11","hashOfConfig":"10"},{"size":777,"mtime":1608528598822,"results":"12","hashOfConfig":"10"},{"size":213,"mtime":1608454139250,"results":"13","hashOfConfig":"10"},{"size":678,"mtime":1608487120571,"results":"14","hashOfConfig":"10"},{"size":193,"mtime":1608475584838,"results":"15","hashOfConfig":"10"},{"size":808,"mtime":1608481488725,"results":"16","hashOfConfig":"10"},{"size":834,"mtime":1608487332064,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"39ttr7",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"20"},"/home/rudra/Code/PracticeCode/redux-todoapp/src/index.js",[],["37","38"],"/home/rudra/Code/PracticeCode/redux-todoapp/src/reportWebVitals.js",[],"/home/rudra/Code/PracticeCode/redux-todoapp/src/App.js",[],"/home/rudra/Code/PracticeCode/redux-todoapp/src/redux/store.js",[],"/home/rudra/Code/PracticeCode/redux-todoapp/src/redux/reducers/TodosReducer.js",[],"/home/rudra/Code/PracticeCode/redux-todoapp/src/components/Header/Header.js",[],"/home/rudra/Code/PracticeCode/redux-todoapp/src/components/Todo/Todo.js",["39"],"import React, { useEffect } from \"react\";\nimport \"./Todo.css\";\n\n\n\nexport default function Todo (props){\n\n    function RotateDropdownArrow(){\n        const dropDown = document.querySelector(\".dropDownButton\");\n        dropDown.style.transform = \"rotate(270deg)\";\n    };\n    return(\n        <div className=\"TODO\">\n            <div className=\"main-todo\">\n                <p>{props.name}</p>\n                <div className=\"todo-buttons\">\n                    <p className=\"completed\">{props.children ? null : <input type=\"checkbox\"></input>}</p>\n                    <button>+</button>\n                    <button className=\"dropDownButton\" onClick={RotateDropdownArrow}>&gt;</button>\n                </div>\n            </div>\n            <div className=\"child-todos\">{props.children}</div>\n        </div>\n    )\n}","/home/rudra/Code/PracticeCode/redux-todoapp/src/components/Adder/Adder.js",["40"],"import React from \"react\"\nimport \"./Adder.css\"\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\"\n\n//Redux-Actions\nimport {Add_Todo} from \"../../redux/reducers/TodosReducer\"\n\n\nfunction Adder(){\n    const dispatch = useDispatch();\n    const [text, setText] = useState(\"\");\n\n    function handleChange(input){\n        setText(input.target.value);\n    }\n    return(\n        <div className=\"Adder\">\n            <input onChange={handleChange} className=\"Add-Text\" type={text} required={true}></input>\n            <button onClick={()=>{\n                if(text != \"\"){\n                    dispatch(Add_Todo({name:text}));\n                    document.querySelector(\".Add-Text\").value = \"\";\n                    setText(\"\");\n                }\n                }}>+</button>\n        </div>\n    )\n}\n\nexport default Adder;",{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":1,"column":17,"nodeType":"47","messageId":"48","endLine":1,"endColumn":26},{"ruleId":"49","severity":1,"message":"50","line":21,"column":25,"nodeType":"51","messageId":"52","endLine":21,"endColumn":27},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]